@model Match.ViewModels.VMMember

@{
    ViewBag.Title = "Create";

    if (Session["right"] != null)
    {
        Layout = "~/Views/Shared/_Layout_manager.cshtml";
    }
    
}

@if (Session["right"] != null)
{
    <h2>新增會員</h2>
}
else
{
    <h2>註冊會員</h2>
}

@using (Html.BeginForm("Create", "Members", FormMethod.Post, new { enctype = "multipart/form-data" }))  //上傳檔案的表單需有enctype=multipart/form-data
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.member_account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_account, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.member_password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirm_member_password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.confirm_member_password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.confirm_member_password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_name, "", new { @class = "text-danger" })
            </div>
        </div>
        @*預覽圖片*@
        <div class="form-group">
            @Html.LabelFor(model => model.member_photo_file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <img width="200" id="newPhoto" />

                <input type="file" name="photo" id="photo" class="from-control" />
                <span class="field-validation-valid text-danger" data-valmsg-for="photo" data-valmsg-replace="true"></span>
                <span class="field-validation-valid text-danger">@ViewBag.ErrMsg</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_id_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_id_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_id_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label>男</label>
                    <input type="radio" name="member_gender" value="true" checked />
                    <label>女</label>
                    <input type="radio" name="member_gender" value="false" />
                    @*@Html.EditorFor(model => model.member_gender)*@
                    @*@Html.ValidationMessageFor(model => model.member_gender, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_birthday, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.member_birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_cellphone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_address, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.right_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.right_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.right_id, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*下拉式選單只顯示有權限建立的選項。EX:right="B"，下拉式選單為:高級會員、一般會員、被封鎖者*@
        @if (Session["right"] != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.right_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" name="right_id">
                        @{
                            var rightData = "ABCDE";
                            var rightInt = rightData.IndexOf(Session["right"].ToString());
                        }
                        @foreach (var item in ViewBag.right_id)
                        {
                            if (rightInt < rightData.IndexOf(item.Value))
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        }
                        @Html.ValidationMessageFor(model => model.right_id, "", new { @class = "text-danger" })
                    </select>
                </div>
            </div>
        }
        else
        {
            <input type="hidden" name="right_id" value="D">
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="註冊" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@ViewBag.ErrMsg
<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        //預覽圖片
        $("#photo").change(() => {
            var oFReader = new FileReader();
            var file = document.getElementById('photo').files[0];
            oFReader.readAsDataURL(file);
            oFReader.onloadend = function (oFRevent) {
                var src = oFRevent.target.result;
                $('#newPhoto').attr('src', src);
            }
        });
    </script>
}

