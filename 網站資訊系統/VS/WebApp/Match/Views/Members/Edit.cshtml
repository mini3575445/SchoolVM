@model Match.Models.Member

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout_manager.cshtml";
}

<h2>Edit</h2>
@using (Html.BeginForm("Edit", "Members", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.member_id)
        @Html.HiddenFor(model => model.member_account)
        @Html.HiddenFor(model => model.member_password) @*在前端不顯示textbox，但值會從後端傳至前端!*@
        <div class="form-group">
            @Html.LabelFor(model => model.member_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_photo_file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>原本照片：</span>
                @if (@Model.member_photo_file == null)
                {
                    <img src="~/MemberPhotos/defaultPhoto.png" width="300">
                }
                else
                {
                    <img src="~/MemberPhotos/@Model.member_photo_file" width="300">
                }
                <span>新照片：</span><img width="300" id="newPhoto" />
                <input id="photo" name="photo" type="file" class="form-control" />
                <span class="field-validation-valid text-danger" data-valmsg-for="photo" data-valmsg-replace="true"></span>
                <span class="field-validation-valid text-danger">@ViewBag.ErrMsg</span>
            </div>
        </div>   
        <div class="form-group">
            @Html.LabelFor(model => model.member_id_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_id_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.member_id_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">

                    @if (Model.member_gender == true)
                    {
                        <label>男</label>
                        <input type="radio" id="member_gender" name="member_gender" value="true" checked />
                        <label>女</label>
                        <input type="radio" id="member_gender" name="member_gender" value="false" />
                    }
                    else
                    {
                        <label>男</label>
                        <input type="radio" id="member_gender" name="member_gender" value="true" />
                        <label>女</label>
                        <input type="radio" id="member_gender" name="member_gender" value="false" checked />
                    }
                    @*@Html.EditorFor(model => model.member_gender)*@
                    @*@Html.ValidationMessageFor(model => model.member_gender, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.member_birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_cellphone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.member_cellphone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.member_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.member_address, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.right_id, "權限名稱", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("right_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.right_id, "", new { @class = "text-danger" })
                </div>
            </div>*@


        @*下拉式選單只顯示有權限建立的選項。EX:right="B"，下拉式選單為:高級會員、一般會員、被封鎖者*@
        <div class="form-group">
            @Html.LabelFor(model => model.right_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="right_id">
                    @{
                        var rightData = "ABCDE";
                        var rightInt = rightData.IndexOf(Session["right"].ToString());
                    }
                    @foreach (var item in ViewBag.right_id)
                    {
                        if (rightInt < rightData.IndexOf(item.Value))
                        {
                            if (Model.right_id == item.Value)
                            {
                                <option value="@item.Value" selected>@item.Text</option>
                            }
                            else
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        }
                    }
                    @Html.ValidationMessageFor(model => model.right_id, "", new { @class = "text-danger" })
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member_create_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.member_create_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.member_create_date, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        @ViewBag.ErrMsg
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        //預覽圖片
        $("#photo").change(() => {
            var oFReader = new FileReader();
            var file = document.getElementById('photo').files[0];
            oFReader.readAsDataURL(file);
            oFReader.onloadend = function (oFRevent) {
                var src = oFRevent.target.result;
                $('#newPhoto').attr('src', src);
            }
        });
    </script>

}